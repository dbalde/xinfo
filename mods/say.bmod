#!/usr/bin/env bash

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Copyright 2014 - Ã˜yvind 'bolt' Hvidsten   <bolt@dhampir.no>

! ${GHOST:-false} || return 0

function say_do
{
	local say_func=$1
	shift
	if [[ "$1" = "#"* ]]; then
		$say_func "$target" "$2"
	elif admin_verbosehas $(src_host); then
		local channel text
		read -r channel text <<<"$2"
		if ! [[ "$channel" =~ ^#[[:alnum:]_-]+$ ]]; then
			reply "Usage: say #channel <text> [text] ..."
		elif ! sf_inarray "$channel" "${current_channels[@]}"; then
			reply "I don't think I am currently in $channel"
		else
			reply "OK. Saying \"${text}\" in ${channel}"
			$say_func "$channel" "$text"
		fi
	fi
}

if [[ -n "$reply" ]]; then
	case "$data" in
		"say")
			reply "Say what?"
		;;
		"say "*)
			if [[ -n "${data#say }" ]]; then
				say_do say "$reply" "${data#say }"
			fi
		;;
		"action")
			reply "What action?"
		;;
		"action "*)
			if [[ -n "${data#action }" ]]; then
				say_do action "$reply" "${data#action }"
			fi
		;;
	esac
fi
